@model List<HaveASeat.Models.Servizio>

@{
    Layout = "_DashboardLayout";
    var salone = ViewBag.SaloneCorrente as HaveASeat.Models.Salone;
    var saloni = ViewBag.Saloni as List<HaveASeat.Models.Salone>;
    var hasMultipleSedi = ViewBag.HasMultipleSedi as bool? ?? false;
    var hasServizi = Model != null && Model.Count > 0;
}

<!-- Header -->
<div class="flex flex-col lg:flex-row lg:items-center justify-between mb-8 space-y-4 lg:space-y-0">
    <div>
        <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Gestione Servizi</h1>
        <p class="text-gray-600 dark:text-gray-400 mt-1">
            @if (hasMultipleSedi)
            {
                <span>Gestisci i servizi di <strong>@salone?.Nome</strong></span>
            }
            else
            {
                <span>Gestisci i servizi del tuo salone</span>
            }
        </p>
        @if (hasMultipleSedi)
        {
            <div class="mt-2">
                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400">
                    <i class="fas fa-info-circle mr-1"></i>
                    Hai @saloni?.Count sedi - Seleziona quella da gestire
                </span>
            </div>
        }
    </div>

    <div class="flex items-center space-x-3">
        <!-- Selector Salone - Solo se ha più sedi -->
        @if (hasMultipleSedi && saloni != null && saloni.Count > 1)
        {
            <div class="dropdown dropdown-bottom dropdown-end">
                <div tabindex="0" role="button" class="btn btn-outline border-gray-300 dark:border-gray-600 min-w-[200px]">
                    <i class="fas fa-store mr-2"></i>
                    <span class="truncate">@salone?.Nome</span>
                    <i class="fas fa-chevron-down ml-2"></i>
                </div>
                <ul tabindex="0" class="dropdown-content menu bg-base-100 dark:bg-gray-800 rounded-box z-[1] w-64 p-2 shadow-xl border border-gray-200 dark:border-gray-700 max-h-60 overflow-y-auto">
                    @foreach (var s in saloni)
                    {
                        <li>
                            <a href="@Url.Action("Index", new { saloneId = s.SaloneId })"
                               class="@(s.SaloneId == salone?.SaloneId ? "active bg-purple-50 dark:bg-purple-900/20" : "") hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">
                                <i class="fas fa-store mr-2 @(s.SaloneId == salone?.SaloneId ? "text-purple-600" : "")"></i>
                                <div class="flex-1">
                                    <div class="font-medium">@s.Nome</div>
                                    <div class="text-xs text-gray-500">@s.Citta, @s.Provincia</div>
                                </div>
                                @if (s.SaloneId == salone?.SaloneId)
                                {
                                    <i class="fas fa-check ml-auto text-green-500"></i>
                                }
                            </a>
                        </li>
                    }
                </ul>
            </div>
        }

        @if (salone != null)
        {
            <a href="@Url.Action("Create", new { saloneId = salone.SaloneId })" class="inline-flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white text-sm font-medium rounded-lg transition-colors duration-200">
                <i class="fas fa-plus mr-2"></i>
                Aggiungi Servizio
            </a>
        }
        else
        {
            <div class="inline-flex items-center px-4 py-2 bg-gray-400 text-white text-sm font-medium rounded-lg cursor-not-allowed">
                <i class="fas fa-exclamation-triangle mr-2"></i>
                Seleziona una sede
            </div>
        }
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mb-6">
        <i class="fas fa-check-circle mr-2"></i>
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-error mb-6">
        <i class="fas fa-exclamation-circle mr-2"></i>
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info mb-6">
        <i class="fas fa-info-circle mr-2"></i>
        @TempData["InfoMessage"]
    </div>
}

@if (salone == null)
{
    <!-- No Salon Selected State -->
    <div class="flex items-center justify-center min-h-[60vh]">
        <div class="text-center max-w-md mx-auto">
            <div class="mx-auto mb-8">
                <div class="w-32 h-32 mx-auto bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-900 rounded-full flex items-center justify-center">
                    <i class="fas fa-store text-6xl text-gray-400 dark:text-gray-600"></i>
                </div>
            </div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4">Seleziona una sede</h2>
            <p class="text-gray-600 dark:text-gray-400 mb-8 leading-relaxed">
                @if (hasMultipleSedi)
                {
                    <span>Hai più sedi registrate. Seleziona una sede dal menu a tendina per gestire i relativi servizi.</span>
                }
                else
                {
                    <span>Sembra che ci sia un problema con la selezione della sede. Riprova o contatta il supporto.</span>
                }
            </p>
            @if (saloni != null && saloni.Any())
            {
                <a href="@Url.Action("Index", new { saloneId = saloni.First().SaloneId })" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                    <i class="fas fa-arrow-right mr-2"></i>
                    Vai a @saloni.First().Nome
                </a>
            }
        </div>
    </div>
}
else if (!hasServizi)
{
    <!-- Empty State -->
    <div class="flex items-center justify-center min-h-[60vh]">
        <div class="text-center max-w-md mx-auto">
            <div class="mx-auto mb-8">
                <div class="w-32 h-32 mx-auto bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900/20 dark:to-pink-900/20 rounded-full flex items-center justify-center">
                    <i class="fas fa-cut text-6xl text-gray-400 dark:text-gray-600"></i>
                </div>
            </div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4">Nessun servizio configurato</h2>
            <p class="text-gray-600 dark:text-gray-400 mb-8 leading-relaxed">
                Non hai ancora configurato nessun servizio per <strong>@salone.Nome</strong>. Inizia aggiungendo il primo servizio per permettere ai clienti di prenotare.
            </p>
            <a href="@Url.Action("Create", new { saloneId = salone.SaloneId })" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                <i class="fas fa-plus mr-2"></i>
                Aggiungi Primo Servizio
            </a>
        </div>
    </div>
}
else
{
    <!-- Stats Overview -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Servizi Totali</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">@Model.Count</p>
                </div>
                <div class="w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-cut text-purple-600 dark:text-purple-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Servizi attivi</p>
        </div>

        <!-- Sostituisci la card "Prezzo Medio" nelle statistiche con questa -->
        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Prezzo Medio</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">
                        €@{
                            var prezzoMedio = Model.Average(s => s.IsPromotion && s.DataFinePromozione > DateTime.Now ? s.PrezzoPromozione : s.Prezzo);
                        }@prezzoMedio.ToString("F0")
                    </p>
                </div>
                <div class="w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-euro-sign text-green-600 dark:text-green-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">
                @{
                    var serviziInPromo = Model.Count(s => s.IsPromotion && s.DataFinePromozione > DateTime.Now);
                }
                @if (serviziInPromo > 0)
                {
                    <span>Include @serviziInPromo prezzi promozionali</span>
                }
                else
                {
                    <span>Prezzo medio servizi</span>
                }
            </p>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Durata Media</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">@Model.Average(s => s.Durata).ToString("F0")</p>
                </div>
                <div class="w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-clock text-blue-600 dark:text-blue-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Minuti medi</p>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">In Promozione</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">@Model.Count(s => s.IsPromotion)</p>
                </div>
                <div class="w-12 h-12 bg-orange-100 dark:bg-orange-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-tag text-orange-600 dark:text-orange-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Servizi scontati</p>
        </div>
    </div>

    <!-- Servizi Grid -->
    <div class="mb-8">
        <div class="flex flex-col sm:flex-row sm:items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-4 sm:mb-0">Servizi @salone?.Nome</h2>
            <div class="flex items-center space-x-3">
                <div class="relative">
                    <form method="get" class="flex items-center">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="saloneId" value="@salone.SaloneId" />
                        <input type="text" name="search" value="@ViewContext.HttpContext.Request.Query["search"]" placeholder="Cerca servizi..." class="input input-bordered input-sm w-64 pl-10 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 dark:text-white">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none"></i>
                    </form>
                </div>
                <div class="flex items-center space-x-2">
                    <button onclick="filterServizi('all')" class="filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-colors bg-purple-600 text-white">
                        Tutti
                    </button>
                    <button onclick="filterServizi('promo')" class="filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-colors bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600">
                        In Promo
                    </button>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
            @foreach (var servizio in Model)
            {
                <div class="servizio-card bg-white dark:bg-gray-800 rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-gray-700 overflow-hidden hover:-translate-y-1" data-promo="@(servizio.IsPromotion ? "true" : "false")">

                    <!-- Card Header -->
                    <div class="p-6 border-b border-gray-100 dark:border-gray-700">
                        <div class="flex items-start justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center shadow-lg">
                                    <i class="fas fa-cut text-white text-lg"></i>
                                </div>
                                <div>
                                    <h3 class="font-bold text-gray-900 dark:text-gray-100 text-lg">@servizio.Nome</h3>
                                    @if (!string.IsNullOrEmpty(servizio.Descrizione))
                                    {
                                        <p class="text-gray-600 dark:text-gray-400 text-sm line-clamp-2">@servizio.Descrizione</p>
                                    }
                                </div>
                            </div>

                            <!-- Promo Badge -->
                            @if (servizio.IsPromotion)
                            {
                                <div>
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400 animate-pulse">
                                        <i class="fas fa-tag mr-1"></i>
                                        Promo
                                    </span>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Card Body -->
                    <div class="p-6">
                        <!-- Pricing & Duration -->
                        <div class="grid grid-cols-2 gap-4 mb-6">
                            <div class="text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                                @if (servizio.IsPromotion && servizio.DataFinePromozione > DateTime.Now)
                                {
                                    <!-- Prezzo in promozione -->
                                    <div class="space-y-1">
                                        <div class="text-xl font-bold text-orange-600 dark:text-orange-400">
                                            €@servizio.PrezzoPromozione.ToString("F2")
                                        </div>
                                        <div class="text-sm text-gray-500 dark:text-gray-400 line-through">
                                            €@servizio.Prezzo.ToString("F2")
                                        </div>
                                    </div>
                                    <div class="text-xs text-orange-600 dark:text-orange-400 font-medium">
                                        Prezzo Promo
                                    </div>
                                }
                                else
                                {
                                    <!-- Prezzo normale -->
                                    <div class="text-2xl font-bold text-green-600 dark:text-green-400">
                                        €@servizio.Prezzo.ToString("F2")
                                    </div>
                                    <div class="text-xs text-gray-600 dark:text-gray-400">Prezzo</div>
                                }
                            </div>
                            <div class="text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800">
                                <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">
                                    @servizio.Durata
                                </div>
                                <div class="text-xs text-gray-600 dark:text-gray-400">Minuti</div>
                            </div>
                        </div>

                        <!-- Staff Assegnato -->
                        <div class="mb-4">
                            <p class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Staff assegnato:</p>
                            @if (servizio.DipendenteServizi.Any())
                            {
                                <div class="flex flex-wrap gap-1">
                                    @foreach (var dipServ in servizio.DipendenteServizi.Take(2))
                                    {
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400">
                                            @dipServ.Dipendente.ApplicationUser.Nome @dipServ.Dipendente.ApplicationUser.Cognome.Substring(0, 1).
                                        </span>
                                    }
                                    @if (servizio.DipendenteServizi.Count > 2)
                                    {
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400">
                                            +@(servizio.DipendenteServizi.Count - 2) altri
                                        </span>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="text-xs text-yellow-600 dark:text-yellow-400">
                                    <i class="fas fa-exclamation-triangle mr-1"></i>
                                    Nessuno staff assegnato
                                </span>
                            }
                        </div>

                        <!-- Promotion Info -->
                        @if (servizio.IsPromotion && servizio.DataFinePromozione > DateTime.Now)
                        {
                            <div class="mb-4 p-3 bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg">
                                <div class="flex items-center text-orange-800 dark:text-orange-200 text-sm">
                                    <i class="fas fa-fire mr-2"></i>
                                    <span class="font-medium">Promozione attiva fino al @servizio.DataFinePromozione.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Card Footer -->
                    <div class="p-6 bg-gray-50 dark:bg-gray-700/30 border-t border-gray-100 dark:border-gray-700">
                        <div class="flex items-center justify-between">
                            <a href="@Url.Action("Details", new { id = servizio.ServizioId })" class="inline-flex items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                                <i class="fas fa-eye mr-2"></i>
                                Dettagli
                            </a>

                            <div class="flex items-center space-x-2">
                                <!-- Toggle Promo -->
                                <button onclick="togglePromotion('@servizio.ServizioId')" class="inline-flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors duration-200 @(servizio.IsPromotion ? "text-white bg-orange-600 hover:bg-orange-700" : "text-orange-600 bg-white dark:bg-gray-800 border border-orange-300 dark:border-orange-600 hover:bg-orange-50 dark:hover:bg-orange-900/20")" title="@(servizio.IsPromotion ? "Disattiva Promozione" : "Attiva Promozione")">
                                    <i class="fas fa-tag mr-1"></i>
                                    @(servizio.IsPromotion ? "Promo ON" : "Promo")
                                </button>

                                <div class="dropdown dropdown-end dropdown-top">
                                    <div tabindex="0" role="button" class="inline-flex items-center justify-center w-8 h-8 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                                        <i class="fas fa-ellipsis-v text-gray-500"></i>
                                    </div>
                                    <ul tabindex="0" class="dropdown-content menu bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 z-[1] w-48 p-2">
                                        <li>
                                            <a href="@Url.Action("Edit", new { id = servizio.ServizioId })" class="flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                                                <i class="fas fa-edit mr-3 text-blue-500"></i>
                                                Modifica
                                            </a>
                                        </li>
                                        <li>
                                            <a href="@Url.Action("Duplicate", new { id = servizio.ServizioId })" class="flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                                                <i class="fas fa-copy mr-3 text-green-500"></i>
                                                Duplica
                                            </a>
                                        </li>
                                        <li>
                                            <hr class="my-1 border-gray-200 dark:border-gray-700">
                                        </li>
                                        <li>
                                            <a href="@Url.Action("Delete", new { id = servizio.ServizioId })" class="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                                                <i class="fas fa-trash mr-3"></i>
                                                Elimina
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<script src="~/js/promotion.js"></script>
<script>
    // Script per filtrare i servizi
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.querySelector('input[name="search"]');

        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const cards = document.querySelectorAll('.servizio-card');

                cards.forEach(function(card) {
                    const nomeServizio = card.querySelector('h3').textContent.toLowerCase();

                    // Prendi la descrizione se esiste
                    const descrizioneElement = card.querySelector('.line-clamp-2');
                    const descrizione = descrizioneElement ? descrizioneElement.textContent.toLowerCase() : '';

                    // Verifica se il termine di ricerca è presente nel nome o descrizione
                    if (nomeServizio.includes(searchTerm) || descrizione.includes(searchTerm)) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        }
    });
    // Funzioni di filtro
    function filterServizi(type) {
        const cards = document.querySelectorAll('.servizio-card');
        const buttons = document.querySelectorAll('.filter-btn');

        // Reset button styles
        buttons.forEach(btn => {
            btn.className = 'filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-colors bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600';
        });

        // Set active button
        event.target.className = 'filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-colors bg-purple-600 text-white';

        // Filter cards
        cards.forEach(card => {
            const isPromo = card.getAttribute('data-promo') === 'true';
            card.style.display = (type === 'all' || (type === 'promo' && isPromo)) ? 'block' : 'none';
        });
    }

    // Funzione togglePromotion migliorata
    function togglePromotion(servizioId) {
        const url = `/Servizio/GetPromotionModal/${servizioId}`;

        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }

                return response.text();
            })
            .then(html => {
                // Rimuovi eventuali modal esistenti
                const existingModal = document.getElementById('promotionModal');
                if (existingModal) {
                    existingModal.remove();
                }

                // Aggiungi il nuovo modal
                document.body.insertAdjacentHTML('beforeend', html);

                // Verifica che il modal sia stato aggiunto
                const newModal = document.getElementById('promotionModal');

                if (newModal) {
                    // Aggiungi event listeners per chiusura modal
                    newModal.addEventListener('click', function(e) {
                        if (e.target === this) {
                            window.closeModal();
                        }
                    });

                    // ESC key
                    document.addEventListener('keydown', function escHandler(e) {
                        if (e.key === 'Escape' && document.getElementById('promotionModal')) {
                            window.closeModal();
                            document.removeEventListener('keydown', escHandler);
                        }
                    });
                }
            })
            .catch(error => {
                if (typeof Swal !== 'undefined') {
                    Swal.fire('Errore', 'Impossibile caricare il modal: ' + error.message, 'error');
                } else {
                    alert('Errore: ' + error.message);
                }
            });
    }
</script>