@model List<HaveASeat.Models.Dipendente>

@{
    Layout = "_DashboardLayout";
    var salone = ViewBag.SaloneCorrente as HaveASeat.Models.Salone;
    var saloni = ViewBag.Saloni as List<HaveASeat.Models.Salone>;
    var hasMultipleSedi = ViewBag.HasMultipleSedi as bool? ?? false;
    var hasStaff = Model != null && Model.Count > 0;
}

<!-- Header -->
<div class="flex flex-col lg:flex-row lg:items-center justify-between mb-8 space-y-4 lg:space-y-0">
    <div>
        <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Gestione Staff</h1>
        <p class="text-gray-600 dark:text-gray-400 mt-1">
            @if (hasMultipleSedi)
            {
                <span>Gestisci il team di <strong>@salone?.Nome</strong></span>
            }
            else
            {
                <span>Gestisci il team del tuo salone</span>
            }
        </p>
        @if (hasMultipleSedi)
        {
            <div class="mt-2">
                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400">
                    <i class="fas fa-info-circle mr-1"></i>
                    Hai @saloni?.Count sedi - Seleziona quella da gestire
                </span>
            </div>
        }
    </div>

    <div class="flex items-center space-x-3">
        <!-- Selector Salone - Solo se ha più sedi -->
        @if (hasMultipleSedi && saloni != null && saloni.Count > 1)
        {
            <div class="dropdown dropdown-bottom dropdown-end">
                <div tabindex="0" role="button" class="btn btn-outline border-gray-300 dark:border-gray-600 min-w-[200px]">
                    <i class="fas fa-store mr-2"></i>
                    <span class="truncate">@salone?.Nome</span>
                    <i class="fas fa-chevron-down ml-2"></i>
                </div>
                <ul tabindex="0" class="dropdown-content menu bg-base-100 dark:bg-gray-800 rounded-box z-[1] w-64 p-2 shadow-xl border border-gray-200 dark:border-gray-700 max-h-60 overflow-y-auto">
                    @foreach (var s in saloni)
                    {
                        <li>
                            <a href="@Url.Action("Index", new { saloneId = s.SaloneId })"
                            class="@(s.SaloneId == salone?.SaloneId ? "active bg-purple-50 dark:bg-purple-900/20" : "") hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">
                                <i class="fas fa-store mr-2 @(s.SaloneId == salone?.SaloneId ? "text-purple-600" : "")"></i>
                                <div class="flex-1">
                                    <div class="font-medium">@s.Nome</div>
                                    <div class="text-xs text-gray-500">@s.Citta, @s.Provincia</div>
                                </div>
                                @if (s.SaloneId == salone?.SaloneId)
                                {
                                    <i class="fas fa-check ml-auto text-green-500"></i>
                                }
                            </a>
                        </li>
                    }
                </ul>
            </div>
        }

        @if (salone != null)
        {
            @if (salone.Servizi.Any())
            {            
                <a href="@Url.Action("Create", new { saloneId = salone.SaloneId })" class="inline-flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white text-sm font-medium rounded-lg transition-colors duration-200">
                    <i class="fas fa-user-plus mr-2"></i>
                    Aggiungi Staff
                </a>
            }
        }
        else
        {
            <div class="inline-flex items-center px-4 py-2 bg-gray-400 text-white text-sm font-medium rounded-lg cursor-not-allowed">
                <i class="fas fa-exclamation-triangle mr-2"></i>
                Seleziona una sede
            </div>
        }
    </div>
</div>

@if (salone == null)
{
    <!-- No Salon Selected State -->
    <div class="flex items-center justify-center min-h-[60vh]">
        <div class="text-center max-w-md mx-auto">
            <div class="mx-auto mb-8">
                <div class="w-32 h-32 mx-auto bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-900 rounded-full flex items-center justify-center">
                    <i class="fas fa-store text-6xl text-gray-400 dark:text-gray-600"></i>
                </div>
            </div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4">Seleziona una sede</h2>
            <p class="text-gray-600 dark:text-gray-400 mb-8 leading-relaxed">
                @if (hasMultipleSedi)
                {
                    <span>Hai più sedi registrate. Seleziona una sede dal menu a tendina per gestire il relativo staff.</span>
                }
                else
                {
                    <span>Sembra che ci sia un problema con la selezione della sede. Riprova o contatta il supporto.</span>
                }
            </p>
            @if (saloni != null && saloni.Any())
            {
                <a href="@Url.Action("Index", new { saloneId = saloni.First().SaloneId })" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-lg hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                    <i class="fas fa-arrow-right mr-2"></i>
                    Vai a @saloni.First().Nome
                </a>
            }
        </div>
    </div>
}
else if (!hasStaff)
{
    <!-- Empty State -->
    <div class="flex items-center justify-center min-h-[60vh]">
        <div class="text-center max-w-md mx-auto">
            <div class="mx-auto mb-8">
                <div class="w-32 h-32 mx-auto bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-900/20 dark:to-purple-900/20 rounded-full flex items-center justify-center">
                    <i class="fas fa-user-slash text-6xl text-gray-400 dark:text-gray-600"></i>
                </div>
            </div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4">Nessun membro dello staff</h2>
            <p class="text-gray-600 dark:text-gray-400 mb-8 leading-relaxed">
                Non hai ancora aggiunto nessun membro al team di <strong>@salone.Nome</strong>. Inizia aggiungendo il primo collaboratore.
            </p>

            <!-- Verifica se ci sono servizi disponibili -->
            @if (salone.Servizi != null && salone.Servizi.Any())
            {
                <a href="@Url.Action("Create", new { saloneId = salone.SaloneId })" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                    <i class="fas fa-user-plus mr-2"></i>
                    Aggiungi Primo Membro
                </a>
            }
            else
            {
                <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4 mb-6">
                    <div class="flex items-start space-x-3">
                        <i class="fas fa-exclamation-triangle text-yellow-500 mt-0.5"></i>
                        <div>
                            <p class="text-yellow-800 dark:text-yellow-200 text-sm font-medium">Prima configura i servizi</p>
                            <p class="text-yellow-700 dark:text-yellow-300 text-xs mt-1">
                                Per aggiungere staff devi prima configurare almeno un servizio per questo salone.
                            </p>
                        </div>
                    </div>
                </div>
                <div class="flex flex-col sm:flex-row gap-3 justify-center">
                    <a href="@Url.Action("ManageSede", "Partner", new { id = salone.SaloneId })" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-orange-600 to-red-600 text-white font-semibold rounded-lg hover:from-orange-700 hover:to-red-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
                        <i class="fas fa-cog mr-2"></i>
                        Configura Servizi
                    </a>
                    <span class="inline-flex items-center px-6 py-3 bg-gray-400 text-white font-semibold rounded-lg cursor-not-allowed opacity-50">
                        <i class="fas fa-user-plus mr-2"></i>
                        Aggiungi Staff (Dopo servizi)
                    </span>
                </div>
            }
        </div>
    </div>
}
else
{
    <!-- Stats Overview -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Staff Totale</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">@Model.Count</p>
                </div>
                <div class="w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-users text-blue-600 dark:text-blue-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Membri del team</p>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Servizi Coperti</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">@Model.SelectMany(d => d.ServiziOfferti).Select(ds => ds.ServizioId).Distinct().Count()</p>
                </div>
                <div class="w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-cut text-green-600 dark:text-green-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Servizi assegnati</p>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Appuntamenti Oggi</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">@Model.Sum(d => d.Appuntamenti.Count(a => a.Data.Date == DateTime.Today))</p>
                </div>
                <div class="w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-calendar-check text-purple-600 dark:text-purple-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Prenotazioni oggi</p>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Rating Medio</p>
                    <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">
                        @{
                            var mediaVoti = Model.SelectMany(d => d.Recensioni).Any() ?
                            Model.SelectMany(d => d.Recensioni).Average(r => r.Voto) : 0;
                        }
                        @mediaVoti.ToString("F1")
                    </p>
                </div>
                <div class="w-12 h-12 bg-orange-100 dark:bg-orange-900/30 rounded-lg flex items-center justify-center">
                    <i class="fas fa-star text-orange-600 dark:text-orange-400"></i>
                </div>
            </div>
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Recensioni staff</p>
        </div>
    </div>

    <!-- Staff Grid -->
    <div class="mb-8">
        <div class="flex flex-col sm:flex-row sm:items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-4 sm:mb-0">Team @salone?.Nome</h2>
            <div class="flex items-center space-x-3">
                <div class="relative">
                    <form method="get" class="flex items-center">
                        <input type="hidden" name="saloneId" value="@salone.SaloneId" />
                        <input type="text" name="search" value="@ViewContext.HttpContext.Request.Query["search"]" placeholder="Cerca staff..." class="input input-bordered input-sm w-64 pl-10 focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 dark:text-white">
                        <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none"></i>
                    </form>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
            @foreach (var dipendente in Model)
            {
                <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-gray-700 overflow-hidden hover:-translate-y-2">

                    <!-- Card Header -->
                    <div class="p-6 border-b border-gray-100 dark:border-gray-700">
                        <div class="flex items-center space-x-4">
                            <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full flex items-center justify-center shadow-lg">
                                <span class="text-white text-xl font-bold">
                                    @Html.Raw(dipendente.ApplicationUser.Nome.Substring(0, 1) + dipendente.ApplicationUser.Cognome.Substring(0, 1))
                                </span>
                            </div>
                            <div class="flex-1">
                                <h3 class="font-bold text-gray-900 dark:text-gray-100 text-lg">
                                    @dipendente.ApplicationUser.Nome @dipendente.ApplicationUser.Cognome
                                </h3>
                                <p class="text-gray-600 dark:text-gray-400 text-sm">
                                    <i class="fas fa-envelope mr-1"></i>
                                    @dipendente.ApplicationUser.Email
                                </p>
                                @if (!string.IsNullOrEmpty(dipendente.ApplicationUser.PhoneNumber))
                                {
                                    <p class="text-gray-600 dark:text-gray-400 text-sm">
                                        <i class="fas fa-phone mr-1"></i>
                                        @dipendente.ApplicationUser.PhoneNumber
                                    </p>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Card Body -->
                    <div class="p-6">
                        <!-- Stats -->
                        <div class="grid grid-cols-3 gap-4 mb-6">
                            <div class="text-center p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                                <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">
                                    @dipendente.Appuntamenti.Count(a => a.Data.Date == DateTime.Today)
                                </div>
                                <div class="text-xs text-gray-600 dark:text-gray-400">Oggi</div>
                            </div>
                            <div class="text-center p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                                <div class="text-2xl font-bold text-green-600 dark:text-green-400">
                                    @dipendente.ServiziOfferti.Count
                                </div>
                                <div class="text-xs text-gray-600 dark:text-gray-400">Servizi</div>
                            </div>
                            <div class="text-center p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                                <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">
                                    @(dipendente.Recensioni.Any() ? dipendente.Recensioni.Average(r => r.Voto).ToString("F1") : "N/A")
                                </div>
                                <div class="text-xs text-gray-600 dark:text-gray-400">Rating</div>
                            </div>
                        </div>

                        <!-- Servizi Assegnati -->
                        @if (dipendente.ServiziOfferti.Any())
                        {
                            <div class="mb-4">
                                <p class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Servizi:</p>
                                <div class="flex flex-wrap gap-1">
                                    @foreach (var servizio in dipendente.ServiziOfferti.Take(3))
                                    {
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400">
                                            @servizio.Servizio.Nome
                                        </span>
                                    }
                                    @if (dipendente.ServiziOfferti.Count > 3)
                                    {
                                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400">
                                            +@(dipendente.ServiziOfferti.Count - 3) altri
                                        </span>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Status Indicators -->
                        <div class="flex items-center justify-between mb-4">
                            <div class="flex items-center space-x-2">
                                @if (dipendente.Orari.Any())
                                {
                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400">
                                        <i class="fas fa-clock mr-1"></i>
                                        Orari OK
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400">
                                        <i class="fas fa-exclamation-triangle mr-1"></i>
                                        Senza orari
                                    </span>
                                }

                                @if (dipendente.Appuntamenti.Any(a => a.Data.Date == DateTime.Today))
                                {
                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400">
                                        <i class="fas fa-calendar-check mr-1"></i>
                                        Impegnato
                                    </span>
                                }
                            </div>

                            <span class="text-xs text-gray-500 dark:text-gray-400">
                                Dal @dipendente.DataCreazione.ToString("dd/MM/yyyy")
                            </span>
                        </div>
                    </div>

                    <!-- Card Footer -->
                    <div class="p-6 bg-gray-50 dark:bg-gray-700/30 border-t border-gray-100 dark:border-gray-700">
                        <div class="flex items-center justify-between">
                            <a href="@Url.Action("Details", new { id = dipendente.DipendenteId })" class="inline-flex items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                                <i class="fas fa-eye mr-2"></i>
                                Dettagli
                            </a>

                            <div class="flex items-center space-x-2">
                                <a href="@Url.Action("Schedule", new { id = dipendente.DipendenteId })" class="inline-flex items-center px-3 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-lg transition-colors duration-200" title="Gestisci Orari">
                                    <i class="fas fa-clock mr-1"></i>
                                    Orari
                                </a>

                                <div class="dropdown dropdown-end dropdown-top">
                                    <div tabindex="0" role="button" class="inline-flex items-center justify-center w-8 h-8 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                                        <i class="fas fa-ellipsis-v text-gray-500"></i>
                                    </div>
                                    <ul tabindex="0" class="dropdown-content menu bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 z-[1] w-48 p-2">
                                        <li>
                                            <a href="@Url.Action("Edit", new { id = dipendente.DipendenteId })" class="flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                                                <i class="fas fa-edit mr-3 text-blue-500"></i>
                                                Modifica
                                            </a>
                                        </li>
                                        <li>
                                            <hr class="my-1 border-gray-200 dark:border-gray-700">
                                        </li>
                                        <li>
                                            <a href="@Url.Action("Delete", new { id = dipendente.DipendenteId })" class="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                                                <i class="fas fa-trash mr-3"></i>
                                                Rimuovi
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<script>
    // Script per filtrare lo staff
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.querySelector('input[name="search"]');

        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const cards = document.querySelectorAll('.bg-white.dark\\:bg-gray-800.rounded-2xl');

                cards.forEach(function(card) {
                    // Prendi il nome e cognome dello staff
                    const nomeStaff = card.querySelector('h3').textContent.toLowerCase();

                    // Prendi l'email
                    const emailElement = card.querySelector('.fa-envelope').parentElement;
                    const email = emailElement ? emailElement.textContent.toLowerCase() : '';

                    // Prendi il telefono se esiste
                    const phoneElement = card.querySelector('.fa-phone');
                    const phone = phoneElement ? phoneElement.parentElement.textContent.toLowerCase() : '';

                    // Prendi i servizi assegnati
                    const serviziElements = card.querySelectorAll('.bg-blue-100 .text-xs');
                    const servizi = Array.from(serviziElements).map(el => el.textContent.toLowerCase()).join(' ');

                    // Verifica se il termine di ricerca è presente in uno dei campi
                    if (nomeStaff.includes(searchTerm) ||
                        email.includes(searchTerm) ||
                        phone.includes(searchTerm) ||
                        servizi.includes(searchTerm)) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        }
    });
</script>